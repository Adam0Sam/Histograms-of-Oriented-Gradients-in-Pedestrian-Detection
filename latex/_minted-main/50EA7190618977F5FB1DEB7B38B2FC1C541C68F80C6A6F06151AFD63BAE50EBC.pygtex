\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{import} \PYG{n+nn}{os}
\PYG{k+kn}{import} \PYG{n+nn}{joblib}
\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k}{as} \PYG{n+nn}{np}
\PYG{k+kn}{from} \PYG{n+nn}{hog} \PYG{k+kn}{import} \PYG{n}{HOG\PYGZus{}Parameters}\PYG{p}{,} \PYG{n}{hog}
\PYG{k+kn}{from} \PYG{n+nn}{transform} \PYG{k+kn}{import} \PYG{n}{grayscale\PYGZus{}transform}\PYG{p}{,} \PYG{n}{hog\PYGZus{}transform}
\PYG{k+kn}{from} \PYG{n+nn}{sklearn.svm} \PYG{k+kn}{import} \PYG{n}{SVC}

\PYG{k}{class} \PYG{n+nc}{SVM\PYGZus{}Parameters}\PYG{p}{:}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{    Class to hold SVM parameters, including HOG parameters and window size.}

\PYG{l+s+sd}{    Attributes:}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    hog\PYGZus{}parameters : HOG\PYGZus{}Parameters}
\PYG{l+s+sd}{        Parameters for HOG feature extraction.}

\PYG{l+s+sd}{    window\PYGZus{}size : tuple}
\PYG{l+s+sd}{        The size of the sliding window as (height, width).}
\PYG{l+s+sd}{    \PYGZsq{}\PYGZsq{}\PYGZsq{}}
    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{hog\PYGZus{}parameters}\PYG{p}{:} \PYG{n}{HOG\PYGZus{}Parameters}\PYG{p}{,} \PYG{n}{window\PYGZus{}size}\PYG{p}{):}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{hog\PYGZus{}parameters} \PYG{o}{=} \PYG{n}{hog\PYGZus{}parameters}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{window\PYGZus{}size} \PYG{o}{=} \PYG{n}{window\PYGZus{}size}
    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}svm\PYGZus{}name}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
\PYG{+w}{        }\PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{        Get the name of the SVM model based on HOG parameters and window size.}

\PYG{l+s+sd}{        Returns:}
\PYG{l+s+sd}{        \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{        str}
\PYG{l+s+sd}{            The name of the SVM model.}
\PYG{l+s+sd}{        \PYGZsq{}\PYGZsq{}\PYGZsq{}}
        \PYG{k}{return} \PYG{l+s+s2}{\PYGZdq{}svm\PYGZus{}\PYGZdq{}} \PYG{o}{+} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{hog\PYGZus{}parameters}\PYG{o}{.}\PYG{n}{get\PYGZus{}hog\PYGZus{}name}\PYG{p}{()} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{}\PYGZus{}window\PYGZus{}\PYGZdq{}} \PYG{o}{+} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{window\PYGZus{}size}\PYG{p}{)}

\PYG{k}{def} \PYG{n+nf}{load\PYGZus{}svm}\PYG{p}{(}\PYG{n}{svm\PYGZus{}parameters}\PYG{p}{:} \PYG{n}{SVM\PYGZus{}Parameters}\PYG{p}{,} \PYG{n}{model\PYGZus{}dir}\PYG{p}{,} \PYG{n}{custom\PYGZus{}name}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{    Load an SVM model from the specified directory.}

\PYG{l+s+sd}{    Parameters:}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    svm\PYGZus{}parameters : SVM\PYGZus{}Parameters}
\PYG{l+s+sd}{        Parameters associated with the SVM model.}

\PYG{l+s+sd}{    model\PYGZus{}dir : str}
\PYG{l+s+sd}{        The directory where the model is stored.}

\PYG{l+s+sd}{    custom\PYGZus{}name : str, optional}
\PYG{l+s+sd}{        A custom name for the model file.}

\PYG{l+s+sd}{    Returns:}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    object}
\PYG{l+s+sd}{        The loaded SVM model.}

\PYG{l+s+sd}{    Raises:}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    Exception}
\PYG{l+s+sd}{        If the model file is not found.}
\PYG{l+s+sd}{    \PYGZsq{}\PYGZsq{}\PYGZsq{}}
    \PYG{n}{model\PYGZus{}name} \PYG{o}{=} \PYG{n}{custom\PYGZus{}name} \PYG{k}{if} \PYG{n}{custom\PYGZus{}name} \PYG{o+ow}{is} \PYG{o+ow}{not} \PYG{k+kc}{None} \PYG{k}{else} \PYG{n}{svm\PYGZus{}parameters}\PYG{o}{.}\PYG{n}{get\PYGZus{}svm\PYGZus{}name}\PYG{p}{()}
    \PYG{n}{model\PYGZus{}file\PYGZus{}name} \PYG{o}{=} \PYG{n}{os}\PYG{o}{.}\PYG{n}{path}\PYG{o}{.}\PYG{n}{join}\PYG{p}{(}\PYG{n}{model\PYGZus{}dir}\PYG{p}{,} \PYG{n}{model\PYGZus{}name} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{}.pkl\PYGZdq{}}\PYG{p}{)}
    \PYG{n+nb}{print}\PYG{p}{(}\PYG{n}{model\PYGZus{}file\PYGZus{}name}\PYG{p}{)}
    \PYG{k}{if} \PYG{n}{os}\PYG{o}{.}\PYG{n}{path}\PYG{o}{.}\PYG{n}{exists}\PYG{p}{(}\PYG{n}{model\PYGZus{}file\PYGZus{}name}\PYG{p}{):}
        \PYG{k}{return} \PYG{n}{joblib}\PYG{o}{.}\PYG{n}{load}\PYG{p}{(}\PYG{n}{model\PYGZus{}file\PYGZus{}name}\PYG{p}{)}
    \PYG{k}{raise} \PYG{n+ne}{Exception}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Model not found\PYGZdq{}}\PYG{p}{)}

\PYG{k}{def} \PYG{n+nf}{train\PYGZus{}svm}\PYG{p}{(}\PYG{n}{svm\PYGZus{}parameters}\PYG{p}{:} \PYG{n}{SVM\PYGZus{}Parameters}\PYG{p}{,} \PYG{n}{data\PYGZus{}points\PYGZus{}location}\PYG{p}{,} \PYG{n}{labels\PYGZus{}location}\PYG{p}{,} \PYG{n}{overwrite}\PYG{o}{=}\PYG{k+kc}{False}\PYG{p}{,} \PYG{n}{custom\PYGZus{}name}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{):}
\PYG{+w}{    }\PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{    Train an SVM model with the given parameters and save it to a file.}

\PYG{l+s+sd}{    Parameters:}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    svm\PYGZus{}parameters : SVM\PYGZus{}Parameters}
\PYG{l+s+sd}{        Parameters associated with the SVM model.}

\PYG{l+s+sd}{    data\PYGZus{}points\PYGZus{}location : str}
\PYG{l+s+sd}{        Path to the file containing training data points.}

\PYG{l+s+sd}{    labels\PYGZus{}location : str}
\PYG{l+s+sd}{        Path to the file containing training labels.}

\PYG{l+s+sd}{    overwrite : bool, optional}
\PYG{l+s+sd}{        If True, overwrite the existing model.}

\PYG{l+s+sd}{    custom\PYGZus{}name : str, optional}
\PYG{l+s+sd}{        A custom name for the saved model file.}

\PYG{l+s+sd}{    kernel\PYGZus{}type : str, optional}
\PYG{l+s+sd}{        The type of kernel to use for the SVM.}
\PYG{l+s+sd}{    \PYGZsq{}\PYGZsq{}\PYGZsq{}}
    \PYG{k+kn}{from} \PYG{n+nn}{sklearn.linear\PYGZus{}model} \PYG{k+kn}{import} \PYG{n}{SGDClassifier}
    \PYG{n}{model\PYGZus{}name} \PYG{o}{=} \PYG{n}{custom\PYGZus{}name} \PYG{k}{if} \PYG{n}{custom\PYGZus{}name} \PYG{o+ow}{is} \PYG{o+ow}{not} \PYG{k+kc}{None} \PYG{k}{else} \PYG{n}{svm\PYGZus{}parameters}\PYG{o}{.}\PYG{n}{get\PYGZus{}svm\PYGZus{}name}\PYG{p}{()}

    \PYG{n}{model\PYGZus{}file\PYGZus{}path} \PYG{o}{=} \PYG{n}{os}\PYG{o}{.}\PYG{n}{path}\PYG{o}{.}\PYG{n}{join}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}../saved\PYGZus{}models\PYGZsq{}}\PYG{p}{,} \PYG{n}{model\PYGZus{}name} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{}.pkl\PYGZdq{}}\PYG{p}{)}

    \PYG{k}{if} \PYG{n}{os}\PYG{o}{.}\PYG{n}{path}\PYG{o}{.}\PYG{n}{exists}\PYG{p}{(}\PYG{n}{model\PYGZus{}file\PYGZus{}path}\PYG{p}{):}
      \PYG{k}{if} \PYG{n}{overwrite}\PYG{p}{:}
        \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Removing existing model\PYGZdq{}}\PYG{p}{)}
        \PYG{n}{os}\PYG{o}{.}\PYG{n}{remove}\PYG{p}{(}\PYG{n}{model\PYGZus{}file\PYGZus{}path}\PYG{p}{)}
      \PYG{k}{else}\PYG{p}{:}
        \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Model already exists\PYGZdq{}}\PYG{p}{)}
        \PYG{k}{return}

    \PYG{k}{if} \PYG{n}{os}\PYG{o}{.}\PYG{n}{path}\PYG{o}{.}\PYG{n}{exists}\PYG{p}{(}\PYG{n}{data\PYGZus{}points\PYGZus{}location}\PYG{p}{)} \PYG{o+ow}{and} \PYG{n}{os}\PYG{o}{.}\PYG{n}{path}\PYG{o}{.}\PYG{n}{exists}\PYG{p}{(}\PYG{n}{labels\PYGZus{}location}\PYG{p}{):}
        \PYG{n}{training\PYGZus{}data\PYGZus{}points} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{load}\PYG{p}{(}\PYG{n}{data\PYGZus{}points\PYGZus{}location}\PYG{p}{)}
        \PYG{n}{training\PYGZus{}labels} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{load}\PYG{p}{(}\PYG{n}{labels\PYGZus{}location}\PYG{p}{)}
    \PYG{k}{else}\PYG{p}{:}
        \PYG{k}{raise} \PYG{n+ne}{Exception}\PYG{p}{(}
            \PYG{l+s+s2}{\PYGZdq{}No data points or labels found\PYGZdq{}}\PYG{p}{,}
            \PYG{n}{data\PYGZus{}points\PYGZus{}location}\PYG{p}{,}
            \PYG{n}{labels\PYGZus{}location}
        \PYG{p}{)}

    \PYG{n}{x\PYGZus{}train} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{load}\PYG{p}{(}\PYG{n}{data\PYGZus{}points\PYGZus{}location}\PYG{p}{)}
    \PYG{n}{y\PYGZus{}train} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{load}\PYG{p}{(}\PYG{n}{labels\PYGZus{}location}\PYG{p}{)}

    \PYG{n}{x\PYGZus{}train\PYGZus{}gray} \PYG{o}{=} \PYG{n}{grayscale\PYGZus{}transform}\PYG{p}{(}\PYG{n}{x\PYGZus{}train}\PYG{p}{)}
    \PYG{n}{x\PYGZus{}train\PYGZus{}hog} \PYG{o}{=} \PYG{n}{hog\PYGZus{}transform}\PYG{p}{(}\PYG{n}{x\PYGZus{}train\PYGZus{}gray}\PYG{p}{,} \PYG{n}{svm\PYGZus{}parameters}\PYG{o}{.}\PYG{n}{hog\PYGZus{}parameters}\PYG{p}{)}

    \PYG{n}{sgd\PYGZus{}clf} \PYG{o}{=} \PYG{n}{SGDClassifier}\PYG{p}{(}\PYG{n}{random\PYGZus{}state}\PYG{o}{=}\PYG{l+m+mi}{42}\PYG{p}{,} \PYG{n}{max\PYGZus{}iter}\PYG{o}{=}\PYG{l+m+mi}{1000}\PYG{p}{,} \PYG{n}{tol}\PYG{o}{=}\PYG{l+m+mf}{1e\PYGZhy{}3}\PYG{p}{)}
    \PYG{n}{sgd\PYGZus{}clf}\PYG{o}{.}\PYG{n}{fit}\PYG{p}{(}\PYG{n}{x\PYGZus{}train\PYGZus{}hog}\PYG{p}{,} \PYG{n}{y\PYGZus{}train}\PYG{p}{)}

    \PYG{n}{joblib}\PYG{o}{.}\PYG{n}{dump}\PYG{p}{(}\PYG{n}{sgd\PYGZus{}clf}\PYG{p}{,} \PYG{n}{model\PYGZus{}file\PYGZus{}path}\PYG{p}{)}


\end{Verbatim}
